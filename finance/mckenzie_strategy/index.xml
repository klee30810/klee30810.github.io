<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mckenzie Problem Solving Strategy on Kevin&#39;s Codex</title>
    <link>https://klee30810.github.io/finance/mckenzie_strategy/</link>
    <description>Recent content in Mckenzie Problem Solving Strategy on Kevin&#39;s Codex</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 31 Jan 2022 21:35:12 +0900</lastBuildDate><atom:link href="https://klee30810.github.io/finance/mckenzie_strategy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Zero-base &amp; Hypothesis Thinking</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/1/</link>
      <pubDate>Mon, 31 Jan 2022 21:40:50 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/1/</guid>
      <description>사고 편 - 제로베이스 사고와 가설 사고   제로베이스 사고 : 기존의 틀에서 벗어나 백지 상태에서 생각 가설 사고 : 늘 어떤 시점에서 결론을 가지고 행동을 시작하는 사고법 성공을 이끌었던 과거의 패턴을 바꾸기 위해서는 용기가 필요하다. 그러나 실패한 후에 이러한 과정을 따르려고 하면 늦다. 성공하고 있는 동안 늘 새로운 씨앗을 계속해서 찾아내지 않으면 어느날 갑자기 &#39;패러다임 대격변&#39;을 마주하게 된다. 기업의 체질과 무관한 신규 사업을 육성하기는 어렵다. 하지만 토양과 딱 맞는 묘목은 새로움이 없다.</description>
    </item>
    
    <item>
      <title>1.1 Zero-based Thnking</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/1_1/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:28 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/1_1/</guid>
      <description>제로베이스 사고 - 기존의 틀에 얽매이지 않고 사고한다. 사고를 자신의 좁은 틀 속에 가두지 않는다   &#39;기존 관념&#39;이 방해가 되며 그 중 제일은 자기 자신이다. 자신의 좁은 시야 내에서 때때로 부정적 요소가 크게 보여, 결국 전체도 부정적으로 바로봄 어쩌면 틀 밖에 해결 가능성이 있지 않을까?  고객의 입장에서 가치를 생각한다   제로베이스 핵심 : 고객의 입장에서 가치를 생각한다. 고객이란 상품을 구매하는 이용자 만이 아니라, 일을 하고 있는 인간에게는 (내부 직원이든) 반드시 고객이 존재한다.</description>
    </item>
    
    <item>
      <title>1.2 Hypothesis Thinking</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/1_2/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:32 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/1_2/</guid>
      <description>가설 사고 - 항상 그 시점에서 결론을 갖고 행동한다 항상 행동과 연결되는 결론을 내린다   가설 사고의 시작은 우선 무엇인가 결론을 내리는 것 그런 후 결론에 대해서 So What?을 반복해서 실시 : 현재 가지고 있는 정보나 재료 중에서 &#39;결국 어떤 것인가?&#39;를 추출하는 작업  구체적인 행동으로 연결될 수 있는 방향성 ⇒ 현재의 상황을 분석했을 때 무엇인가 행동으로 연결될 수 있는 결론을 끌어내기 위함  결론적으로 무엇을 하면 좋은가? 무엇을 가장 먼저 말하고 싶은가?</description>
    </item>
    
    <item>
      <title>2. MECE &amp; Logic Tree</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/2/</link>
      <pubDate>Mon, 31 Jan 2022 21:40:52 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/2/</guid>
      <description>기술 편 - MECE와 로직트리  전략을 생각한 뒤에 시장(고객), 경쟁사, 자사의 세 가지 움직임을 누락 없이 커버하고 깊게 포착하는 것이 얼마나 중요한지, 더욱이 전략을 실행하는 상태에서 &#39;넓이&#39;를 파악하여 구체화 하는 것이 얼마나 중요한지 기업 경영에 있어서 자신의 눈높이와 같은 높이에서 가장 잘보이고 신경 쓰이는 것이 경쟁사의 움직임, 가장 불안하거나 불만을 가지는 것이 자사의 업적, 가장 간과하기 쉬운 것이 시장의 움직임 전략은 소비자가 지배하는 것 : 시장(고객)에 대한 깊은 통찰력에서 새로운 비즈니스의 씨앗이 생겨남.</description>
    </item>
    
    <item>
      <title>2.1 MECE</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/2_1/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:37 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/2_1/</guid>
      <description>MECE - 누락된 것, 중복된 것이 없는지 체크한다  Mutually Exclusive &amp;amp; Collectively Exhaustive : 어떤 사항을 중복되지 않고, 누락되지도 않게 하여 부분으로 전체를 파악 전체 집합을 누락도 중복도 없는 부분집합으로 나누어 생각한다 중복은 없지만 누락 : 일부 방법만 검토하여 왜곡된 결론 누락은 없지만 중복 : 범주 구분 시 중복 발생 누락도 중복도 있음 : 분류가 다름  비즈니스에서 MECE를 사용하자   경영자원에 제한이 있는 한 커다란 누락이나 중복은 비즈니스의 효과와 효율을 현저하게 떨어트림</description>
    </item>
    
    <item>
      <title>2.2 Logic Tree</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/2_2/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:42 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/2_2/</guid>
      <description>로직 트리 - 제한된 시간 속에서 확산과 깊이를 파악할 수 있다 로직트리란 무엇인가   주요 과제의 원인이나 해결책을 MECE적 사고방식에 기초휴ㅏ여 트리 모양으로 논리적으로 분해하여 정리  누락이나 중복을 미연에 확인 원인이나 해결책을 구체적으로 찾을 수 있음 각 내용의 인과관계를 분명히 함   로직트리로 원인을 찾는다   지속적인 Why?로 뿌리의 원인을 밝혀내야 한다 뿌리의 구체적인 원인을 밝혀내면 반은 해결된 것 문제 → 원인 → 세부 원인 ... → 근본 원인 → 해결책 원인의 수준이 얕으면 문제를 뒤집을 수 있는 해법이 단지 슬로건에 불과  로직트리로 해결책을 구체화한다   해결책이 지녀야 하는 2 조건  표적을 벗어나지 않을 것 바로 행동으로 이어질 수 있도록 구체성이 있을 것  해결책 구체화를 위해서 So How?</description>
    </item>
    
    <item>
      <title>3. Solution System</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/3/</link>
      <pubDate>Mon, 31 Jan 2022 21:40:54 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/3/</guid>
      <description>3. Solution System  제로베이스 사고, 가설 사고, MECE, 로직트리를 통해 비즈니스 문제를 분석하여 구체적인 해결책을 입안하는 문제해결 프로세스  솔루션 시스템의 프로세스 재현   문제가 되는 현상에 대해 과제를 설정하고, 배후의 상황을 고찰한 후 해결책(가설)을 짜내고, 실행하는 프로세스  과제 설정 :문제가 되는 현상을 해결해야 할 과제로서 파악 해결책의 가설 : 과제에 대한 해결책의 가설 생성 해결책의 검증, 평가 : 가설의 검증 및 평가 해결책 실시   </description>
    </item>
    
    <item>
      <title>3.2 Solution Hypothesis Setting</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/3_2/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:51 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/3_2/</guid>
      <description>3.2 Solution Hypothesis Setting 통제 가능한 개별 해결책인가   각 개별 과제에 대한 개별 해결책을 만들기 위해서는, 제로베이스 사고, 가설사고를 기본으로 끝까지 생각해야 한다 그리고 자사, 자부문, 자신이 통제 가능한지 어떤지에 대해 Yes, No의 결론(가설)을 낸다 yes의 경우 어떻게 하면 가능한가?와 구체적인 해결책을 분명히 하고, No의 경우에는 왜 가능하지 않은가?와 이유를 분명히 한다. 조금의 가능성이라도 남으면 Yes로 하고 왜 가능한지 제로베이스 사고를 통해 끝까지 생각해야 한다. 브레인 스토밍을 하면 해결책이 나온다  아무리 해도 구체적인 해결책이 잡히지 않으면, 개별 과제의 분석이 애매해서 초점이 불분명하거나 아이디어가 어떻게 해결로 연결되는지에 대한 과제와 해결책 사이의 논리전개가 허술하기 때문 이를 위해 해결책을 구체화해주는 로직트리(So How)를 철저히 활용해서 모든 범위의 가능성 검토 필요   종합 해결책은 전체의 자원배분을 고려한 것인가   이렇게 나온 구체적인 해결책(가설)은 개별 문제에 대한 해결책 다음 단계는 이들 개별 해결책을 상호 조합해서 주요 과젱 대한 종합 해결책을 만드는 것  개별 과제에 대한 개별 해결책의 가설이 모두 no라면, 자동적으로 종합 해결책은 no 전체적인 문제해결을 완전히 부정하는 Not Out Factor가 존재하는 경우에는, 그 단꼐에서 종합 해결책은 No 자사, 자부문, 자신이 통제할 수 있는 구체적인 해결책이 존재하면 종합 해결책은 yes  종합 해결책이란 개별 과제에 대한 yes나 no의 구체적인 해결책을 조합하여 경영자원의 관점에서 개별 해결책의 적합성을 체크한 다음 만들어짐 그러나 모든 종합 해결책을 동시에 실행하는 것은 자원의 분산과 중복으로 이어지지 않을 수 있다 종합 해결책은 기업의 이념이나 방침, 전략적 방향성이나 조직과의 적합성을 고려한 뒤에 통합되어야 하고, 개별 해결책 간의 적합정도 고려해야 함 전략적 해결책의 경우에는, 경쟁사에 대해 지속적으로 우위를 유지할 수 있는 차별화 요인이 숨겨져 있는지가 특히 중요한 포인트  </description>
    </item>
    
    <item>
      <title>3.1 Task Setting</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/3_1/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:49 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/3_1/</guid>
      <description>3.1 Task Setting 주요 과제의 설정 : 무엇인가와 비교   과제란 &#39;해결해야 한다고 인식된 문제&#39; : 무엇인가와 비교해야 하고, So what을 생각할 필요가 있다  자사 : 달성하고자 하는 목표와 차이가 없는가? 경쟁사 : 경쟁사의 우수한 점과 차이가 없는가? 고객 : 자사의 상품, 서비스에 만족하고 있는가?  과제 설정이 현상으로부터 단기 해결 괒인가, 장래의 목표나 기업의 비전을 달성하기 위한 중기 해결 과제인가는 비교할 때 시점을 시간축의 어느 지점에 놓는가에 따라 달라짐  개별 과제의 설정 : 배후의 메커니즘을 고찰한다   개별 과제 설정후 배후의 매커니즘을 따라서 세분화  가능한 MECE나 로직트리를 통해 독자적인 프레임워크를 만들어 생각 주요 과제에서 개별 과제로 세분화 하는 목적은, 본래 문제가 발생한 배경이나 문제를 일으키는 메커니즘을 분명하게 하기 위함   </description>
    </item>
    
    <item>
      <title>3.3 Solution Verification &amp; Assessment</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/3_3/</link>
      <pubDate>Mon, 31 Jan 2022 21:36:01 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/3_3/</guid>
      <description>3.3 Solution Verification &amp;amp; Assessment 개별 해결책의 검증 : 사실을 기반으로 체크   개별 해결책의 검증은 반드시 사실을 기반으로 평가 정량화 한 것일수록 분석의 정확성이 뛰어나다 비즈니스에서는 기본적으로 오른쪽으로 갈 것인지 오니쪽으로 갈 것인지 판단하는 것이 중요하지, 분석 그 자체를 목적으로 해서는 안된다. 정확성의 수준은 해결책의 내용에 따라 다르다 검증과 분석 단계에서는 기존의 각종 분석 프레임워크나 도구를 최대한 이요하면서 속도와 효율성을 특히 중시해야 함 ⇒ 정확성보다 확인이 중요 리서치가 필요한경우, 증명할 가설에 대해 질문할 항목들이 가능한 한 MECE가 되도록 뽑고, 가설의 포인트가 표적을 벗어나지 않도록 해야 함  종합 해결책의 평가 : 하드 &amp;amp; 소프트 양면 평가   모든 개별 해결책이 검증된 후에 조합에 따른 종합 해결책을, 그 자체 하드한 측면과 그것을 실행하는 소프트한 측면의 양쪽으로 평가할 필요가 있다 하드한 측면  기대성과 : 해결책이 가져오는 효과를 매출, 이익, 성장의 관점에서 평가 투입자원 : 사람, 물건, 돈과 같은 투입자원의 양과 각각에 대한 기업의 제약조건을 기반으로 평가 위험 : 시장과 경쟁관계(경쟁사와의 차별화 요인)의 급변에 의한 변동이나 실패 위험을 평가 전개 속도 : 위의 세가지 요소가 모두 관꼐가 있지만, 성공의 결과를 빨리 내기 위해 조기에 시작할 수 있는 속도에 대한 평가  소프트 측면 : 기업 이념이나 스타일 과의 적합성을 추진하도록 지원하는 경영층의 커팃먼트</description>
    </item>
    
    <item>
      <title>3.4 Solution System Sheet</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/3_4/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:58 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/3_4/</guid>
      <description>3.4 Solution System Sheet 솔루션 시스템 시트   각 파트를 별지에 기입해간다고 하더라도 반드시 시트 한 장에 말하고 싶은 것을 간결하게 정리해야 한다.  ⇒ 자신이 직면하고 있는 과제에 대해 항상 전체관을 가지로 둘러보게 되고, 지금 자신이 문제해결의 어느 단계에 있는지 일목요연하게 알 수 있다.
 시시각각 계속해서 움직이는 비즈니스 현장에서 궤도 수정을 쉽게 할 수 있고, 사전에ㅔ 해결책이 표적에서 벗어나지 않도록 예방할 수 있다.   과제 설정  주요 과제 &amp;amp; 개별 과제 ⇒ 원인 추궁의 로직트리 (Why?</description>
    </item>
    
    <item>
      <title>4. Solution System Usage</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/4/</link>
      <pubDate>Mon, 31 Jan 2022 21:40:56 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/4/</guid>
      <description>4. Solution System Usage  문제를 직면할 때 어떻게 사고하고, 가설을 세워 분석하며, 실행에 들어갈 것인지 소개 차트나 그래프로 경영을 생각하는 습관을 기른다  </description>
    </item>
    
    <item>
      <title>4.2 New Product Introduction</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/4_2/</link>
      <pubDate>Mon, 31 Jan 2022 21:36:09 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/4_2/</guid>
      <description>4.2 New Product Introduction 신상품과 시장의 궁합을 생각한다   기존 고객에게 기존 루트를 유지한 채 새로운 상품을 판매하고자 한다면 어디까지나 상품, 고객, 시스테ㅔㅁ을 하나의 세트로 놓고 상호 궁합을 고려해 선택해야 한다.  판매채널을 &#39;거리의 잡화점&#39; 처럼 만들지 말라   사업이 상품, 고객, 시스템 모두 한 세트라는 사실을 잊지 말자  신상품을 만드는 과정을 좇는다   고객과의 궁합
 상품과의 궁합
 판매채널과의 궁합
 수익 공헌도 : 비즈니스 신상품 개발의 최종 기준</description>
    </item>
    
    <item>
      <title>4.1 Project Task Setting</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/4_1/</link>
      <pubDate>Mon, 31 Jan 2022 21:36:06 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/4_1/</guid>
      <description>4.1 Project Task Setting 문제를 표면에 드러낸다   현 상황을 자사, 시장, 경쟁자의 관점으로 세분화하여 살핀다.  문제가 되는 현상을 분석한다   차트로 현황 분석 (꺾은선 및 막대 그래프 등) MECE로 나눔 → 3C + 1C  사업 과제를 설정한다   상품 &amp;amp; 시장/고객 으로 축 설정 후 배치  해답의 방향을 찾는다   지금 기업이 가지고 있는 강점을 내세울 것인지 / 약점을 강화할 것인지 / 제로에서 시작해 완전히 새로 만들어낼 것인지 사업 컨셉을 재정의  판매 시스템을 재설계한다     </description>
    </item>
    
    <item>
      <title>4.3 Solution Deployment</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/4_3/</link>
      <pubDate>Mon, 31 Jan 2022 21:36:11 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/4_3/</guid>
      <description>4.3 Solution Deployment 협력 파트너를 찾는다   접촉의 비결은 톱다운, 조직의 위에서부터 순서대로 접촉 시작 규모나 격을 따지지 않고 대표에게 직접 전화 상대에게 메리트가 정확하면 서로 이야기 하는 테이블에 앉을 수 있다  사용자의 눈높이에서 상품을 체크한다  전진이라는 쐐기를 박다   쇠는 뜨거울 때 때려라  </description>
    </item>
    
  </channel>
</rss>
