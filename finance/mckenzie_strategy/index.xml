<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mckenzie Problem Solving Strategy on Kevin&#39;s Codex</title>
    <link>https://klee30810.github.io/finance/mckenzie_strategy/</link>
    <description>Recent content in Mckenzie Problem Solving Strategy on Kevin&#39;s Codex</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 31 Jan 2022 21:35:12 +0900</lastBuildDate><atom:link href="https://klee30810.github.io/finance/mckenzie_strategy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Zero-base &amp; Hypothesis Thinking</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/1/</link>
      <pubDate>Mon, 31 Jan 2022 21:40:50 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/1/</guid>
      <description>사고 편 - 제로베이스 사고와 가설 사고   제로베이스 사고 : 기존의 틀에서 벗어나 백지 상태에서 생각 가설 사고 : 늘 어떤 시점에서 결론을 가지고 행동을 시작하는 사고법 성공을 이끌었던 과거의 패턴을 바꾸기 위해서는 용기가 필요하다. 그러나 실패한 후에 이러한 과정을 따르려고 하면 늦다. 성공하고 있는 동안 늘 새로운 씨앗을 계속해서 찾아내지 않으면 어느날 갑자기 &#39;패러다임 대격변&#39;을 마주하게 된다. 기업의 체질과 무관한 신규 사업을 육성하기는 어렵다. 하지만 토양과 딱 맞는 묘목은 새로움이 없다.</description>
    </item>
    
    <item>
      <title>1.1 Zero-based Thnking</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/1_1/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:28 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/1_1/</guid>
      <description>제로베이스 사고 - 기존의 틀에 얽매이지 않고 사고한다. 사고를 자신의 좁은 틀 속에 가두지 않는다   &#39;기존 관념&#39;이 방해가 되며 그 중 제일은 자기 자신이다. 자신의 좁은 시야 내에서 때때로 부정적 요소가 크게 보여, 결국 전체도 부정적으로 바로봄 어쩌면 틀 밖에 해결 가능성이 있지 않을까?  고객의 입장에서 가치를 생각한다   제로베이스 핵심 : 고객의 입장에서 가치를 생각한다. 고객이란 상품을 구매하는 이용자 만이 아니라, 일을 하고 있는 인간에게는 (내부 직원이든) 반드시 고객이 존재한다.</description>
    </item>
    
    <item>
      <title>1.2 Hypothesis Thinking</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/1_2/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:32 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/1_2/</guid>
      <description>가설 사고 - 항상 그 시점에서 결론을 갖고 행동한다 항상 행동과 연결되는 결론을 내린다   가설 사고의 시작은 우선 무엇인가 결론을 내리는 것 그런 후 결론에 대해서 So What?을 반복해서 실시 : 현재 가지고 있는 정보나 재료 중에서 &#39;결국 어떤 것인가?&#39;를 추출하는 작업  구체적인 행동으로 연결될 수 있는 방향성 ⇒ 현재의 상황을 분석했을 때 무엇인가 행동으로 연결될 수 있는 결론을 끌어내기 위함  결론적으로 무엇을 하면 좋은가? 무엇을 가장 먼저 말하고 싶은가?</description>
    </item>
    
    <item>
      <title>2. MECE &amp; Logic Tree</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/2/</link>
      <pubDate>Mon, 31 Jan 2022 21:40:52 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/2/</guid>
      <description>기술 편 - MECE와 로직트리  전략을 생각한 뒤에 시장(고객), 경쟁사, 자사의 세 가지 움직임을 누락 없이 커버하고 깊게 포착하는 것이 얼마나 중요한지, 더욱이 전략을 실행하는 상태에서 &#39;넓이&#39;를 파악하여 구체화 하는 것이 얼마나 중요한지 기업 경영에 있어서 자신의 눈높이와 같은 높이에서 가장 잘보이고 신경 쓰이는 것이 경쟁사의 움직임, 가장 불안하거나 불만을 가지는 것이 자사의 업적, 가장 간과하기 쉬운 것이 시장의 움직임 전략은 소비자가 지배하는 것 : 시장(고객)에 대한 깊은 통찰력에서 새로운 비즈니스의 씨앗이 생겨남.</description>
    </item>
    
    <item>
      <title>2.1 MECE</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/2_1/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:37 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/2_1/</guid>
      <description>MECE - 누락된 것, 중복된 것이 없는지 체크한다  Mutually Exclusive &amp;amp; Collectively Exhaustive : 어떤 사항을 중복되지 않고, 누락되지도 않게 하여 부분으로 전체를 파악 전체 집합을 누락도 중복도 없는 부분집합으로 나누어 생각한다 중복은 없지만 누락 : 일부 방법만 검토하여 왜곡된 결론 누락은 없지만 중복 : 범주 구분 시 중복 발생 누락도 중복도 있음 : 분류가 다름  비즈니스에서 MECE를 사용하자   경영자원에 제한이 있는 한 커다란 누락이나 중복은 비즈니스의 효과와 효율을 현저하게 떨어트림</description>
    </item>
    
    <item>
      <title>2.2 Logic Tree</title>
      <link>https://klee30810.github.io/finance/mckenzie_strategy/2_2/</link>
      <pubDate>Mon, 31 Jan 2022 21:35:42 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/mckenzie_strategy/2_2/</guid>
      <description>로직 트리 - 제한된 시간 속에서 확산과 깊이를 파악할 수 있다 로직트리란 무엇인가   주요 과제의 원인이나 해결책을 MECE적 사고방식에 기초휴ㅏ여 트리 모양으로 논리적으로 분해하여 정리  누락이나 중복을 미연에 확인 원인이나 해결책을 구체적으로 찾을 수 있음 각 내용의 인과관계를 분명히 함   로직트리로 원인을 찾는다   지속적인 Why?로 뿌리의 원인을 밝혀내야 한다 뿌리의 구체적인 원인을 밝혀내면 반은 해결된 것 문제 → 원인 → 세부 원인 ... → 근본 원인 → 해결책 원인의 수준이 얕으면 문제를 뒤집을 수 있는 해법이 단지 슬로건에 불과  로직트리로 해결책을 구체화한다   해결책이 지녀야 하는 2 조건  표적을 벗어나지 않을 것 바로 행동으로 이어질 수 있도록 구체성이 있을 것  해결책 구체화를 위해서 So How?</description>
    </item>
    
  </channel>
</rss>
