<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Kevin&#39;s Codex</title>
    <link>https://klee30810.github.io/</link>
    <description>Recent content in Introduction on Kevin&#39;s Codex</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 08 Feb 2021 23:39:19 +0900</lastBuildDate><atom:link href="https://klee30810.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1~100 Review</title>
      <link>https://klee30810.github.io/finance/halto/1_100/</link>
      <pubDate>Tue, 18 May 2021 21:31:30 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/halto/1_100/</guid>
      <description>2. 버핏의 계량화 8. 모멘텀의 오묘한 세계 Jeegadesh/Titman - Returns to buying Winners and Selling Losers
 Fama/French : 소형주, 저PBR Jeegaesh/Titman : 중기 모멘텀
 최근 많이 오른 주식을 매수하고, 최근 많이 내린 주식을 공매도하는 투자전략을 활용하면 상당한 초과수익을 낼 수 있다.
 초과수익은 3~12개월 유지된다.
 결과 1 : 최근 3~12개월간 가장 많이 오른 놈 사는 것이 장땡 결과 2 : 중소형주, 고베타 주식에서 잘먹힘 → 한국에서는 중소형주에서는 모멘텀이 안먹힘 결과 3 : 1월에는 하지마라 결과 4 : 1965~89 데이터를 5년 단위로 찢어도 (거의) 다 통한다.</description>
    </item>
    
    <item>
      <title>Quality Minus Junk</title>
      <link>https://klee30810.github.io/finance/paper_review/qmj/</link>
      <pubDate>Mon, 17 May 2021 16:22:31 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/paper_review/qmj/</guid>
      <description>Asness, C. S., Frazzini, A., &amp;amp; Pedersen, L. H. (2019). Quality minus junk. Review of Accounting Studies, 24(1), 34-112.
Review   Quality Security : stocks that are safe, profitable, growing and well managed. high quality : higher prices on average, but not by a very large margin A quality-minus-junk(QMJ) factor that goes long high-quality stocks and shorts low-quality stocks earns significant risk-adjusted returns in the U.S. and globally across 24 countries price-to-book value  \[ \frac{P}{B}=\frac{profitability \times payout.</description>
    </item>
    
    <item>
      <title>1. Introduction</title>
      <link>https://klee30810.github.io/finance/cfa_lev1/fra/1_intro/</link>
      <pubDate>Tue, 20 Apr 2021 06:53:12 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/cfa_lev1/fra/1_intro/</guid>
      <description>Financial Reporting Analysis   Financial Reporting : 기업의 이해관계자들에게 주는 회사정보 ⇒ FS + α   FS 1 : Balance Sheet (Statement of Financial Position) : 재무 상태표 FS 2 : Income Statement (Statement of Operating Result) : 손익 계산서 FS 3 : Cash Flow Statement : 현금흐름표 FS 4 : Statement of Change in Equity : 자본 변동표 α : audit report, annual report, 경영 report, footnotes etc.</description>
    </item>
    
    <item>
      <title>Chap1, 2. Statics Review</title>
      <link>https://klee30810.github.io/mech/material/lect/chap12/</link>
      <pubDate>Sun, 04 Apr 2021 10:32:01 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/material/lect/chap12/</guid>
      <description>4대 힘 : Tension &amp;amp; Compression (Axial Loading) / Bending (중립축에 90도) / Shear (단변적 평행방향 힘, 각도 변화) / Twist 외력에 대한 deformation field 구하기 :  Governing Equation \(\triangledown σ + \overrightarrow{b} = \rho \frac{\partial v}{\partial t}\), Stress-strain equation \(σ=D\varepsilon\), Displacement - strain equation \(\varepsilon = \frac{\partial u}{\partial x}\)   Statics Review → Equilibrium  Analysis of load acting on physical system  Do not experience acceleration Newton&#39;s Law  An object tends to either remain at rest or continue to move at constant velocity \(\sum\overrightarrow{F}=m\overrightarrow{a}\): resultant force로 표현가능 작용 &amp;amp; 반작용 : 같은 크기 반대방향 힘, 작용점이 같아야 함  반작용 : 움직이지 않는 부분은 같은 크기 반대방향 힘이 걸림 → 가장 안 움직이는 점을 반력 작용점으로.</description>
    </item>
    
    <item>
      <title>Chap1. Introduction &amp; Motivation</title>
      <link>https://klee30810.github.io/mldl/mathml/chap1/</link>
      <pubDate>Mon, 15 Mar 2021 11:15:46 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mldl/mathml/chap1/</guid>
      <description>We believe that the mathematical foundations of machine learning are important in order to understand fundamental principles upon which more complicated machine learning systems are built.  1.1 Finding Words for Intuitions   machine learning algorithm (predictor) : a system that makes predictions based on input data
 training : a system that adapts some internal parameters of the predictor so that it performs well on future unseen input data</description>
    </item>
    
    <item>
      <title>Chap1. 자료구조와 알고리즘 이해</title>
      <link>https://klee30810.github.io/compu/data_structure/chap1/</link>
      <pubDate>Sun, 07 Mar 2021 14:34:59 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap1/</guid>
      <description>1. 자료와 자료구조  자료(data)는 현실 세계로부터 단순한 관찰이나 측정을 통해서 수집한 사실(fact)들 또는 값이다. 자료는 가공되지 않은 상태를 의미하고, 정보(information)는 어떤 기준에 의해 정리되고 기록된 것을 의미한다. 자료 구조(Data Structure)는 자료 개체(Data Object)의 집합, 자료 값 사이의 관계 그리고 자료에 적용 가능한 함수 또는 연산 등을 의미한다. 프로그램이란 데이터를 표현하고, 그렇게 표현된 데이터를 처리하는 것이다. 데이터의 표현은 데이터의 저장을 포함하고, 데이터의 저장을 담당하는 것이 자료구조이다.  2. 자료의 구성  비트, 바이트, 단어, 항목, 레코드, 파일, 데이터베이스  3.</description>
    </item>
    
    <item>
      <title>HSK 1급 단어</title>
      <link>https://klee30810.github.io/language/chinese/hsk1_word/</link>
      <pubDate>Sat, 06 Mar 2021 07:32:54 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/hsk1_word/</guid>
      <description>我 [wǒ] 我是中国人。[wǒ shì zhōngguórén] I am chinese.     나 나는 중국인 입니다. I.   你 [nǐ] 你漂亮。[nǐ piàoliang] You are beautiful.   너 당신은 예쁩니다. you.   他 [tā] 他是先生 [tā shì xiānsheng] He is a teacher.   그, 그사람 (He) 그는 선생이다. He.   她 [tā] 她是学生 [tā shì xuésheng] She is a student.   그녀, 그여자 (She) 그녀는 학생입니다.</description>
    </item>
    
    <item>
      <title>Chap1. 서론</title>
      <link>https://klee30810.github.io/battery/principles_lithium/chap1/</link>
      <pubDate>Wed, 17 Feb 2021 20:31:24 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/principles_lithium/chap1/</guid>
      <description>1-1 전지의 역사   전지(battery) : 전기화학반응을 이용하여 전극 물질의 화학에너지를 전기에너지로 직접 변환하는 시스템
 1차전지(Primary battery) : 일정 수명기간 동안만 한 차례 사용이 가능
 르클랑셰의 망간전지 → 산성 전해질을 수산화칼륨염(KOH)을 적용한 알칼리전지 → 리튬금속을 음극으로 적용한 3V급 리튬일차전지  2차전지(Secondary battery) : 재충전을 통해 장시간 반복 사용이 가능
 플랑떼의 납축전지 → Ni/Cd 전지 → NiMH 전지 → 리튬이차전지    1-2 전지기술의 혁명   리튬이온을 전극 및 전해질 내에서의 전하 전달체(charge carrier)로 사용하는 리튬 이차전지는 경량이면서도 3.</description>
    </item>
    
    <item>
      <title>Chap1. 힘과 운동</title>
      <link>https://klee30810.github.io/sci/funda_physics/chap1/</link>
      <pubDate>Wed, 17 Feb 2021 02:02:07 +0900</pubDate>
      
      <guid>https://klee30810.github.io/sci/funda_physics/chap1/</guid>
      <description>1. 속도와 가속도  (1) 위치의 변화와 변위  운동 : 물체의 위치가 시간에 따라 변하는 현상  기준점을 먼저 정하고, 그 기준점으로부터의 거리와 방향을 함께 나타내야 함  이동거리 : 물체가 이동한 경로의 길 변위 : 물체의 이동경로는 생각하지 않고 출발점과 도착점을 최단거리로 연결하는 선분의 길이와 방향을 함께 나타낸 것  스칼라 : 크기만으로 완전히 표현되는 물리량 벡터 : 크기와 방향을 함께 나타내는 물리량   (2) 속력과 속도  속력 (speed) : 물체가 단위 시간(1초)에 이동한 거리  \[ 속력=\frac{이동거리}{걸린시간},\quad v=\frac{x}{t} \]</description>
    </item>
    
    <item>
      <title>Chap1. General Principles</title>
      <link>https://klee30810.github.io/mech/statics/chap1/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:07 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap1/</guid>
      <description>Objectives
 To provide an introduction to the basic quantities and idealizations of mechanics To give a statement of Newton&#39;s Laws of Motion and Gravitation To review the principles for applying the SI system of units To examine the standard procedures for performing numerical calculations To present a general guide for solving problems  1.1 Mechanics (1) A branch of the physical sciences that is concerned with the state of rest or motion of bodies that are subjected to the action of forces</description>
    </item>
    
    <item>
      <title>Chap1. 코드는 이해하기 쉬워야 한다.</title>
      <link>https://klee30810.github.io/compu/readable_code/chap1/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:02 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap1/</guid>
      <description>__01. 무엇이 코드를 ‘더 좋게’ 만드는가? __02. 가독성의 기본 정리  코드는 다른 사람이 그것을 이해하는데 들이는 시간을 최소화하는 방식으로 작성되어야 한다. 누군가 코드를 완전히 이해한다는 것은 그가 코드를 자유롭게 수정하고, 버그를 짚어내고, 수정된 내용이 여러분이 작성한 다른 부분의 코드와 어떻게 상호작용 하는지 알 수 있어야 한다는 뜻이다. 여기서의 누군가는 본인이 될 수도 있다.  __03. 분량이 적으면 항상 더 좋은가?  일반적으로 더 적은 분량의 코드가 보기 좋다. 하지만 그보다는 이해하기 쉬운 코드가 더 좋은 코드이다.</description>
    </item>
    
    <item>
      <title>Battery Basics</title>
      <link>https://klee30810.github.io/battery/battery-basics/</link>
      <pubDate>Tue, 09 Feb 2021 21:14:47 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/battery-basics/</guid>
      <description>2차전지 기본개념 1. 개요  (1) 2차전지의 필요성  일상생활에 많이 쓰임 / 일회용 소모품의 낭비 / 폐기물 및 환경오염 리튬이온전지 : 가볍고 소형화 가능 / 규제물질(수은) X / 자연방전현상 小 / 3.7V 의 높은 출력  (2) 전지  전기에너지를 생성할 수 있는 화학에너지를 저장하는 장치, 산화&amp;amp;환원 작용   종류   망간: 일회용 건전지, 저렴 알칼리 : 수산화 칼륨 전해액, 장시간 사용가능 납 축전지 : 크고 무겁다 / 높은 전류와 외부 저항 낮음 ⇒ 차량용으로 널리 사용 산화 은: 가장 소형 &amp;amp; 저렴 (시계), 고온에서 잘 버팀  분류   2차전지(축전지, 충전지) : 전기 충전을 반복해 지속적으로 사용가능하도록 만듬  1차전지: 시간이 흐르며 전압이 낮아짐 2차전지 : 사용가능 시간까지 일정하게 전압이 유지되다가 방전시에 끊김   리튬전지 : 소형, 휴대용 → 3V 고압, 고밀도 에너지 + 양호한 보존성  음극에 금속 리튬 &amp;amp; 전해액에 유기용매 금속 Li는 이온화 경향이 커서 활성화 되어있으므로 물과 반응하면 수소가스를 방출하며 그 자체도 연소성   연료전지 : 화학적으로 에너지를 저장하고 연료를 소모하며 전력 생산  전해질을 녹임 물로 전류를 흘려보내 \(H_2, O_2\)발생 → 전해질로 사용하는 전극에 \(H_2​\), 산화전극에 \(O_2\)를 보내서 화학반응 유도 수소 연료와 산화제 ⇒ 배출열을 이용해 연료의 80%까지 에너지로 변환     태양전지 : 태양 빛에너지 광전효과로 전기 에너지 변환 커패시터 : 충,방전에 따른 성능 저하를 방지하고 이온 분자를 저장할 수 있는 전기 이중 충전지, 쉽게 열화되지 않는다   용량 : 방전되어 전류가 흐르지 않기까지 사용할 수 있는 전기에너지의 양    2차전지 재충전은 무한대로 할 수 있는게 아님: 전극의 열화로 용량이 줄어듦 ⇒ 실제 용량이 공칭 용량의 50%까지 충방전할 수 잇는 횟수</description>
    </item>
    
    <item>
      <title>Ifucan</title>
      <link>https://klee30810.github.io/finance/paper_review/ifucan/</link>
      <pubDate>Tue, 18 May 2021 21:05:17 +0900</pubDate>
      
      <guid>https://klee30810.github.io/finance/paper_review/ifucan/</guid>
      <description>How Millennials Can Get Rich Slowly William J. Bernstein
Introduction   an investment strategy that a seven-year-old could understand, will take you fifteen minutes of work per year, outperform 90% of finance professionals in the long run.
 Start by saving 15% of salary at age 25 into a 401(k) plan, an IRA, or a taxable account (or all three). Put equal amounts of that 15% into just three different mutual funds:</description>
    </item>
    
    <item>
      <title>Chap3. Mechanical Properties of Materials</title>
      <link>https://klee30810.github.io/mech/material/lect/chap3/</link>
      <pubDate>Sun, 04 Apr 2021 20:07:02 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/material/lect/chap3/</guid>
      <description>모든 방향에 힘이 같다는 등방성 가정!!
Force - Displacement Curve 
 fracture : 재료의 붕괴 시점 ⇒ 예측 불가능 UTS를 지나면 약한 부분이 necking K : stiffness(강성) → 변형 구간의 변형정도 strength(강도) → 힘을 얼마나 줄 수 있느냐 Area = F x d : 흡수 가능한 (견딜 수 있는) 에너지 (toughness)  
 work(strain) hardening : 소성영역에서 더 강해짐 / 에너지 흡수 등력이 줄어들음  
 ductile : large plastic deformation, metal, energy absorption (소성변형 시)</description>
    </item>
    
    <item>
      <title>Chap2. Linear Algebra</title>
      <link>https://klee30810.github.io/mldl/mathml/chap2/</link>
      <pubDate>Mon, 15 Mar 2021 11:15:51 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mldl/mathml/chap2/</guid>
      <description>algebra : common approach is to construct a set of objects (symbols) and a set of rules to manipulate these objects polynomials are vectors → can be added and multiplied by scalar Considering vectors as elements of \(\R^n\)  
2.1 Systems of Linear Equations   Many real-world problems can be described with matrices &amp;amp; vectors.  ⇒ system of linear equations.
\[a_{11}x_1+\dots+a_{1n}x_n=b_1 \\\quad... \\ a_{m1}x_1+\dots+a_{mn}x_n=b_m \]
 Geometric Interpretation  Since a solution to a system of linear equations must satisfy all equations simultaneously, the solution set is the intersection of these lines.</description>
    </item>
    
    <item>
      <title>Chap2. 배열</title>
      <link>https://klee30810.github.io/compu/data_structure/chap2/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:01 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap2/</guid>
      <description>1. 배열  배열은 크기와 성격이 같은 자료형을 연속된 기억 장소에 저장한 것이다. 배열 구조는 선형 리스트(linear list) 또는 순서 리스트(ordered list)를 표현하는 가장 일반적인 형태이다. 일반적으로 배열은 배열명(Array name)으로 식별되고, 배열의 요소(원소)는 배열명에 괄호를 붙여 그 안의 첨자(subscript Or index)로 식별한다.
 1차원 배열 (One-dimensional Array Or vector) A는 A(L:U)로 표시할 수 있다.
 이 때, L은 배열 첨자의 하한 값으로 배열의 시작 값을 의미하고, U는 상한 값으로 배열의 마지막 값을 의미한다.</description>
    </item>
    
    <item>
      <title>HSK 2급 단어</title>
      <link>https://klee30810.github.io/language/chinese/hsk2_word/</link>
      <pubDate>Sat, 06 Mar 2021 07:37:17 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/hsk2_word/</guid>
      <description>1 公司 [gōngsī] 我们公司 [Wǒmen gōngsī] Company. Corporation.      회사. 직장. 우리회사. Our company.   2 机场 [jīchǎng] 国际机场 [Guójì jīchǎng] Airport.    공항. 비행장. 국제공항. International Airport.   3 教室 [jiàoshì] 他在教室 [Tā zài jiàoshì] Classroom.    교실. 그는 교실에 있다. He is in the classroom.   4 房间 [fángjiān] 打扫房间 [Dǎsǎo fángjiān] Room.    방.</description>
    </item>
    
    <item>
      <title>Li-ion battery materials: present &amp; future</title>
      <link>https://klee30810.github.io/paper_review/battery/nitta2015/</link>
      <pubDate>Sun, 21 Feb 2021 07:38:15 +0900</pubDate>
      
      <guid>https://klee30810.github.io/paper_review/battery/nitta2015/</guid>
      <description>Nitta, N., Wu, F., Lee, J. T., &amp;amp; Yushin, G. (2015). Li-ion battery materials: present and future. Materials today, 18(5), 252-264.  Abstract   This review covers key technological developments and scientific challenges for a broad range of Li-ion battery electrodes materials : lithium cobalt oxide (LCO), lithium nickel cobalt manganese oxide (NCM), lithium nickel cobalt aluminum oxide (NCA), lithium iron phosphate (LFP), lithium titanium oxide (LTO) and others are contrasted with that of conversion materials, such as alloying anodes (Si, Ge, Sn, etc.</description>
    </item>
    
    <item>
      <title>Chap2. 전지화학의 기본</title>
      <link>https://klee30810.github.io/battery/principles_lithium/chap2/</link>
      <pubDate>Wed, 17 Feb 2021 20:31:27 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/principles_lithium/chap2/</guid>
      <description>전기화학 : 금속 또는 반도체 등의 전자반도체와 전해질 같은 이온전도체와의 계면에서 일어나는 산화 환원반응에 의한 전자전달을 다루는 학문  2-1 전지의 구성  전기화학 셀 및 전지  셀 : 화학 에너지를 전기 에너지로 변환하거나 그 반대로 전기 에너지를 화학 에너지로 변환하는 소재의 가장 작은 단위구조  2개의 서로 다른 전극과 전해질로 구성. 두 전극은 서로 다른 전위(electric potential)를 가져 전해질을 매개로 하여 연결되었을 때 전위차(기전력)가 발생한다.  전위 : 전기장 내에서 단위 전하가 받는 위치에너지 기전력에 의해서 각 전극에서는 산화, 환원반응이 일어나고 발생된 전자는 외부 회로를 통하여 이동한다.</description>
    </item>
    
    <item>
      <title>Chap2. 운동량과 에너지</title>
      <link>https://klee30810.github.io/sci/funda_physics/chap2/</link>
      <pubDate>Wed, 17 Feb 2021 02:03:58 +0900</pubDate>
      
      <guid>https://klee30810.github.io/sci/funda_physics/chap2/</guid>
      <description>1. 운동량과 충격량  (1) 운동량  우리는 물체의 질량이 같을 때는 속도가 빠른 물체의 운동의 양이 속도가 느린 물체보다 더 크고, 속도가 같을 떄는 질량이 큰 물체의 운동의 양이 질량이 작은 물체보다 더 크다 ⇒ 물체의 운동 효과는 물체의 질량 및 속도에 관련 운동량 : 물체의 운동 효과, 물체의 질량과 속도의 곱, 속도와 같은 방향을 가지는 물리량 \(운동량 = 질량 \times 속도, p=mv\)  (2) 충격량  운동량은 그 물체에 힘을 얼마나 가했느냐에 따라 변화의 정도가 달라진다.</description>
    </item>
    
    <item>
      <title>Chap2 Force Vectors</title>
      <link>https://klee30810.github.io/mech/statics/chap2/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:10 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap2/</guid>
      <description>Objectives
 To show how to add forces and resolve them into components using the Parallelogram Law To express force and position in Cartesian vector form and explain how to determine the vector&#39;s magnitude and direction To introduce the dot product in order to determine the angle between two vectors or the projection of one vector onto another  2.1 Scalars and Vector (1) Scalar : a positive or negative physical quantity that can be completely specified by its magnitude</description>
    </item>
    
    <item>
      <title>Chap2. 이름에 정보 담기</title>
      <link>https://klee30810.github.io/compu/readable_code/chap2/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:38 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap2/</guid>
      <description>★ 이름(식별자)에 정보를 담아내라. 이름을 일종의 설명문으로 생각하라. 좋은 이름은 생각보다 많은 정보를 전달할 수 있다.
__01. 특정한 단어 고르기  구체적인 단어를 선택하라. 더 &#39;화려한&#39; 단어를 찾아보면 그 변수에 더 적합한 단어를 찾는데 도움이 된다.  ★ 재치 있는 이름보다 명확하고 간결한 이름이 더 좋다.

__02. tmp나 retval 같은 보편적인 이름 피하기 1 2 3 4 5 6  var euclidean_norm = function (v) { var retval = 0.</description>
    </item>
    
    <item>
      <title>Chap3. Linked List 1</title>
      <link>https://klee30810.github.io/compu/data_structure/chap3/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:03 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap3/</guid>
      <description>ADT : Abstract Data Type   추상 자료형(ADT) : 구체적인 기능의 완성과 정을 언급하지 않고, 순수하게 기능이 무엇인지를 나열한 것 자료형은 기능의 명세이다! 기능 사용 설명서  ex) int 자료형 : integer를 통해서 가능한 연산(기능)이 나열한 것

 구조체 멤버를 밖에서 접근할 필요 없도록 함수적 기능의 구현 필요 구조체 : Data + 관련 연산  ⇒ 관련 연산이 함께 정의되어야 함!
 C : [구조체&amp;amp;함수 함께 정의: 자료형] + [함수]  배열을 이용한 리스트의 구현  1.</description>
    </item>
    
    <item>
      <title>HSK 3급 단어</title>
      <link>https://klee30810.github.io/language/chinese/hsk3_word/</link>
      <pubDate>Sat, 06 Mar 2021 07:39:38 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/hsk3_word/</guid>
      <description>1 啊 [a] 她怎么没来啊？ [Tā zěnme méi lái a] particle, showing elation, doubt      문장끝에 쓰여, 긍정,의문,감탄 그녀는 왜 오지 않는 거지? Why she did not come?   2 把 [bǎ] 把住方向盘 [Bǎ zhù fāngxiàngpán] to hold, a grip, a handle    ~을 가지고, 쥐고. 묶음, 다발. 핸들을 잡다. to hold the wheel.   3 如果 [rúguǒ] 如果可能。[Rúguǒ kěnéng.] if, in the event that    만약.</description>
    </item>
    
    <item>
      <title>Chap3-1. 리튬 이차전지용 주요 소재 - 양극 활물질</title>
      <link>https://klee30810.github.io/battery/principles_lithium/chap3-1/</link>
      <pubDate>Wed, 17 Feb 2021 20:31:29 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/principles_lithium/chap3-1/</guid>
      <description>3-1 양극 활물질  양극 활물질 개발 역사  intercalation : 활물질의 격자구조 변화없이 리튬 이온이 삽입/탈리 되는 현상
 \(Li/CF_n\): 주기율표 상에서 가장 전기음성도가 큰 불소를 탄소 화합물의 층간에 intecalation
 \(Li/MnO_2\): 기존의 1~1.5V에서 분해되는 수용액 대신에 유기 전해액을 사용하여 3V의 높은 작동전압을 갖게 됨
 활물질에 따라 \( Li(CF)_n,\ Li/MnO_2,\ LiSO_2,\ LiSOCl_2 \) 등이 사용되며 이들 중 \(LiMnO_2\)가 가장 널리 사용되고 있다. \(LiSO_2, LiSOCl_2\)는 저온성능과 내구성이 뛰어나지만 인체에 유해한 물질을 사용하므로 특수 목적에만 사용된다.</description>
    </item>
    
    <item>
      <title>Chap3. 전기와 자기</title>
      <link>https://klee30810.github.io/sci/funda_physics/chap3/</link>
      <pubDate>Wed, 17 Feb 2021 02:04:01 +0900</pubDate>
      
      <guid>https://klee30810.github.io/sci/funda_physics/chap3/</guid>
      <description>1. 전기  (1) 전류 1) 전기력과 전하  전하 : 전기적 성질을 갖게 하는 원인이 되는 성질
 원자핵 속에 있는 양전하(+)를 띤 양성자들이 전자를 궤도운동하게 함 대전 : 원자가 외부의 자극에 의해 (+) / (-) 전하를 띠는 현상 전하량 기본 전하 : \(e=1/60\times 10^{-19}C\)  전기력 : 두 종류의 전하 사이에는 서로 끌거나 미는 힘이 작용
  ⇒ 두 같은 종류의 전하는 서로 밀고, 다른 종류의 전하는 서로 당긴다.</description>
    </item>
    
    <item>
      <title>Chap3. Equilibrium of Force</title>
      <link>https://klee30810.github.io/mech/statics/chap3/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:22 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap3/</guid>
      <description>Objectives
 To introduce the concept of the free-body diagram for a particle To show how to solve particle equilibrium problems using the equation of equilibrium  3.1 Condition for the Equilibrium of a Particle (1) equilibrium : if it remains at rest if originally at rest(static equilibrium), or has a constant velocity if originally in motion \(\sum F = ma = 0​\) -&amp;gt; No acceleration
3.2 The Free-Body Diagram (1) Procedure for Drawing a Free-doby Diagram</description>
    </item>
    
    <item>
      <title>Chap3. 오해할 수 없는 이름들</title>
      <link>https://klee30810.github.io/compu/readable_code/chap3/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:41 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap3/</guid>
      <description>★ 본인이 지은 이름을 &amp;quot;다른 사람들이 다른 의미로 해석할 수 있을까?&amp;quot;라는 질문을 던져보며 철저하게 확인해야 한다.
__01. 예: Filter()  filter라는 변수명은 의미가 모호하다. 대상을 &#39;고르는&#39; 기능을 원한다면 select가 &#39;제거하는&#39; 기능을 원한다면 exclude가 더 낫다.  __02. 예: Clip(text, length)  어떤 문단의 내용을 오려내는 함수 Clip(text,length)라면 두 가지 방식으로 이해할 수 있다. 이 함수의 기능은 문단을 처음부터 최대 length만큼 잘라내는 것이므로 truncate(text,max_chars)가 더 좋다. max_length 은 몇몇 애매모호함을 가지고 있다.</description>
    </item>
    
    <item>
      <title>Chap4&amp;5. Axial Load &amp; Torsion</title>
      <link>https://klee30810.github.io/mech/material/lect/chap45/</link>
      <pubDate>Sun, 18 Apr 2021 12:25:19 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/material/lect/chap45/</guid>
      <description>Chap 4. Torsion   Saint Vernant Principle : stress concentration이 먼 곳에서는 beam 내부의 stress distribution이 uniform 하다고 가정  → 응력 집중의 효과는 국부적이므로 힘의 원인에서 충분히 떨어진 고셍서는 응력이 균일하다고 볼 수 있다.
 Equilibrium equation : \(σ A(x)=N(x)\)
 Stress Strain equation : \(σ{xx}=E\varepsilon{xx} ⇒ E\frac{\partial u}{\partial x}A(x)=N(x)\)
 Strain-Displacement equation : \(\varepsilon_{xx}=\frac{\partial u_{xx}}{\partial x}\)
  \[\frac{\partial u}{\partial x}=\frac{N(x)}{EA(x)} → u=\int \frac{N(x)}{EA(x)}dx \]
 Boundary Condition : reaction force를 주는 것 ⇒ 움직일 수 있으면 reaction force가 없다  Chapter 5.</description>
    </item>
    
    <item>
      <title>Chap4. Linked List 2</title>
      <link>https://klee30810.github.io/compu/data_structure/chap4/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:05 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap4/</guid>
      <description>1. 연결 리스트의 개념적인 이해   배열 : 순차적 접근이 index를 통해서 가능 / 크기가 미리 결정 되어야 하고 변경이 불가능 동적할당 : 순차 접근이 불가능 ⇒ 연결 리스트로 관리할 것  1 2 3 4 5  typedef struct _node { int data; // 데이터를 담을 공간 	struct _node * next; // 연결의 도구! } Node;     노드를 연결 다른 노드를 가리키기 위한 포인터 변수 존재  - 예제 LinkedRead.</description>
    </item>
    
    <item>
      <title>HSK 4급 단어</title>
      <link>https://klee30810.github.io/language/chinese/hsk4_word/</link>
      <pubDate>Sat, 06 Mar 2021 07:43:31 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/hsk4_word/</guid>
      <description>爱情 [àiqíng] 명사 남녀 간의 사랑. 애정.     安排 [ānpái] 동사 (인원·시간 등을) 안배하다. 일을 처리하다. 준비하다.   安全 [ānquán] 형용사 안전하다.   按时 [ànshí] 부사 제때에. 시간에 맞추어.   按照 [ànzhào] 동사 …에 따르다. …의거하다.   百分之 [bǎifēnzhī]  퍼센트.   棒 [bàng] 명사 몽둥이. 막대기. 방망이. 곤봉.   抱 [bào] 동사 안다. 껴안다. 포옹하다.   保护 [bǎohù] 동사 보호하다.</description>
    </item>
    
    <item>
      <title>Chap4. 파동과 입자</title>
      <link>https://klee30810.github.io/sci/funda_physics/chap4/</link>
      <pubDate>Wed, 17 Feb 2021 02:04:06 +0900</pubDate>
      
      <guid>https://klee30810.github.io/sci/funda_physics/chap4/</guid>
      <description>1. 파동의 성질  (1) 파동의 발생과 전파  진동 : 물체가 한 점을 중심으로 흔들리는 것, 한 순간에 존재할 수 없고 좌우 또는 앞뒤로 움직이는 시간 필요 파동 : 진동 상태가 물질(매질)을 따라 퍼져나가는 것 파원 : 파동이 처음 발생한 부분  물결파에서 파동이 전파되어 나갈 때 매질의 각 부분은 제자리에서 아래위로 진동하면서 에너지를 인접 부분으로 전달할 뿐이지, 매질이 파동과 함께 이동하지 않는다.  횡파 : 파동의 진행 방향과 매질의 진동 방향이 수직인 파동, 매질의 위치가 높아졌다 낮아졌다 함 (고저파) 종파 : 파동의 진행 방향과 매딜의 진동 방향이 나란한 파동, 매질의 간격이 빽빽한 부분과 성긴 부분이 생김 (소밀파) 파동은 한 장소에만 존재할 수 없고 한 장소에서 다른 장소로 퍼져나간다.</description>
    </item>
    
    <item>
      <title>Chap4. Force System Resultants</title>
      <link>https://klee30810.github.io/mech/statics/chap4/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:51 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap4/</guid>
      <description>Objectives
 To discuss the concept of the moment of a force and show how to calculate it in two and three dimensions To provide a method for finding the moment of a force about a specified axis To define the moment of a couple To present methods for determining the resultants of nonconcurrent force systems To indicate how to reduce a simple distributed loading to a resultant force having a specified location  4.</description>
    </item>
    
    <item>
      <title>Chap4. 미학</title>
      <link>https://klee30810.github.io/compu/readable_code/chap4/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:43 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap4/</guid>
      <description>-좋은 소스코드는 &#39;눈을 편하게&#39; 해야 한다. 이 장에서는 다음과 같은 세 가지 원리가 사용된다.
1. 코드를 읽는 사람이 이미 친숙한, 일관성 있는 레이아웃을 사용하라.
2. 비슷한 코드는 서로 비슷해 보이게 만들어라.
3. 서로 연관된 코드는 하나의 블록으로 묶어라.
※ 여기서 말하는 미학은 가독성 만을 위한 것으로 새롭게 설계하는 리팩토링은 서로 독립된 아이디어에 해당한다. 두 가지 모두를 추구하는게 이상적이다.
__01. 미학이 무슨 상관인가?  미학적으로 보기 좋은 코드가 사용하기 더 편리하다. 우리는 대부분의 시간을 코드를 그저 바라보는 데 쓴다는 것을 명심하라.</description>
    </item>
    
    <item>
      <title>Chap5. Linked List 3</title>
      <link>https://klee30810.github.io/compu/data_structure/chap5/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:08 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap5/</guid>
      <description>1. 원형 연결 리스트   단순 연결 리스트의 마지막 노드는 NULL을 가리키지만, 원형 연결 리스트의 마지막 노드는 첫 번째 노드를 가리킨다. 모든 노드가 원의 형태를 이루면서 연결되어 있기 때문에 원형 연결 리스트 에서는 사실상 머리와 꼬리의 구분이 없다.  1. 원형 연결 리스트의 대표적인 장점 
 단순 연결 리스트처럼 머리와 꼬리를 가리키는 포인터 변수를 각각 두지 않아도, 하나의 포인터 변수만 있어도 머리 또는 꼬리에 노드를 간단히 추가할 수 있다.</description>
    </item>
    
    <item>
      <title>HSK 5급 단어</title>
      <link>https://klee30810.github.io/language/chinese/hsk5_word/</link>
      <pubDate>Sat, 06 Mar 2021 07:43:34 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/hsk5_word/</guid>
      <description>哎 [āi] 감탄사 (놀람·반가움 등을 나타내어) 어! 야!     唉 [āi] 감탄사 (탄식하는 소리로) 후. 에그.   爱护 [àihù] 동사 소중히 하다. 잘 보살피다. 사랑하고 보호하다.   爱惜 [àixī] 동사 아끼다. 소중히 여기다.   爱心 [àixīn] 명사 (인간이나 환경에 대한) 관심과 사랑. 사랑하는 마음.   暗 [àn] 형용사 어둡다.   岸 [àn] 명사 물가. 해안.   安慰 [ānwèi] 형용사 (마음에) 위로가 되다.</description>
    </item>
    
    <item>
      <title>Chap5. 전지의 설계 및 제조</title>
      <link>https://klee30810.github.io/battery/principles_lithium/chap5/</link>
      <pubDate>Wed, 17 Feb 2021 20:31:36 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/principles_lithium/chap5/</guid>
      <description>전지설계 : 양극 및 음극의 전기화학적인 전위 및 용량, 기구 설계를 통한 전기적인 집전과 전극의 속도론적(kinetics) 요소 및 기본적 안정성 전지 제조공정 : 공정 산포 + 활물질과 제반 조성물의 균일도 및 전극의 코팅 두꼐, 길이와 같은 물리적 균일도  5-1 전지의 설계   기본 원칙  충,방전시 양극의 총 전하량과 음극의 총 전하량은 같다. 전지의 전압은 충, 방전량에 비례한다 사용될 수 있는 전하량은 양극과 음극의 전위 설계에 따라 다르며, 설계전위 이상으로 충전하거나 이하로 방전할 수 없다.</description>
    </item>
    
    <item>
      <title>Chap5. 운동과 에너지</title>
      <link>https://klee30810.github.io/sci/funda_physics/chap5/</link>
      <pubDate>Wed, 17 Feb 2021 02:04:08 +0900</pubDate>
      
      <guid>https://klee30810.github.io/sci/funda_physics/chap5/</guid>
      <description>1. 운동의 기술  (1) 벡터 (2) 등속 직선 운동 (3) 등가속도 직선 운동 2. 중력장 내의 운동  (1) 중력장 내의 직선 운동  중력 : 지구라는 거대한 물체와 지구 표면상에 있는 물체들 사이에 작용하는 만유인력 → 언제나 지구의 중심을 향함 중력장 : 중력이 미치는 공간 범위  1) 자유낙하 운동  물체가 정지상태로부터 중력만을 받으며 낙하하는 운동 → 낙하 동안에도 계속 중력 작용  2) 연직 아래로 던진 물체의 운동  물체를 아래로 던졌기 때문에 초속도 \(v_0\) 존재  3) 연직 위로 던진 물체의 운동  위로 던진 힘과 중력의 방향이 반대로 작용  (2) 포물선 운동 1) 수평방향으로 던진 물체의 운동    (3) 저항과 운동 3.</description>
    </item>
    
    <item>
      <title>Chap5. Equilibrium of a Rigid Body</title>
      <link>https://klee30810.github.io/mech/statics/chap5/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:54 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap5/</guid>
      <description>Objectives  To develop the equations of equilibrium for a rigid body. To introduce the concept of the free-body diagram for a rigid body To show how to solve rigid-body equilibrium problems using the equations of equilibrium  5.1 Conditions for Rigid-Body Equilibrium  The internal forces caused by interactions between particles within the body cancel out because these forces occur in equal but opposite collinear paris, a consequence of Newton&#39;s third law.</description>
    </item>
    
    <item>
      <title>Chap5. 주석에 담아야 하는 대상</title>
      <link>https://klee30810.github.io/compu/readable_code/chap5/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:46 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap5/</guid>
      <description>★ 주석의 목적은 코드를 읽는 사람이 코드를 작성한 사람만큼 코드를 잘 이해하게 돕는 데 있다.
__01. 설명하지 말아야 하는 것 ★ 코드에서 빠르게 유추할 수 있는 내용은 주석으로 달지 말라.
 설명 자체를 위한 설명을 달지 말라. 주석을 달아야하겠다면 파악하기 어려운 세부사항을 적는것이 좋다.
 나쁜 이름에 주석을 달지 마라. 대신 이름을 고쳐라. 좋은 코드 &amp;gt; 나쁜 코드 + 좋은 주석
  __02. 생각을 기록하라  코드를 짜면서 의도한 바나 깨달은 바를 주석으로 기록하라.</description>
    </item>
    
    <item>
      <title>Chap6. Stack</title>
      <link>https://klee30810.github.io/compu/data_structure/chap6/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:11 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap6/</guid>
      <description>1. 스택의 이해와 ADT정의   스택은 ‘먼저 들어간 것이 나중에 나오는 자료구조’로써 초코볼이 담겨있는 통에 비유할 수 있다. ⇒ LIFO(Last-in, First-out)  Push : 초코볼 통에 초코볼을 넣는다 Pop : 초코볼 통에서 초코볼을 꺼낸다. (데이터 추출 &amp;amp; 삭제) Peek : 이번에 꺼낼 초코볼의 색이 무엇인지 통 안을 들여다 본다 (데이터 추출만)   ADT 정의 : 배열 혹은 연결 리스트 기반 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  void StackInit(Stack * pstack); // 스택의 초기화 진행, 스택 생성 후 제일 먼저 호출되어야 함  int SIsEmpty(Stack * pstack); // 스택인 빈 경우 TRUE, 그렇지 않으면 FALSE  void SPush(Stack * pstack, Data data); // 스택에 데이터를 저장, 매개변수 data로 전달된 값을 저장  Data SPop(Stack * pstack); // 마지막에 저장된 요소를 반환하고 삭제 // 본 함수 호출을 위해 데이터가 하나 이상 존재함이 보장되어야 함 =&amp;gt; SIsEmpty 사용  Data SPeek(Stack * pstack); // 마지막 저장요소를 반환하되 삭제하지 않음 // 본 함수 호출을 위해 데이터가 하나 이상 존재함이 보장되어야 함 =&amp;gt; SIsEmpty 사용    2.</description>
    </item>
    
    <item>
      <title>HSK 6급 단어</title>
      <link>https://klee30810.github.io/language/chinese/hsk6_word/</link>
      <pubDate>Sat, 06 Mar 2021 07:43:37 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/hsk6_word/</guid>
      <description>挨 [ái] 동사 …을 받다. …을 당하다.     爱不释手 [àibúshìshǒu]  너무나 좋아하여 차마 손에서 떼어 놓지 못하다.   爱戴 [àidài] 동사 우러러 섬기다. 추대하다.   暧昧 [àimèi] 형용사 (의도·태도 따위가) 애매하다. 불확실하다.   癌症 [áizhèng] 명사 암의 통칭.   昂贵 [ángguì] 형용사 비싸다.   案件 [ànjiàn] 명사 (법률상의) 사건. 사안. 안건.   案例 [ànlì] 명사 사례. (사건·소송 등의) 구체적인 예.</description>
    </item>
    
    <item>
      <title>Chap6. 전기장과 자기장</title>
      <link>https://klee30810.github.io/sci/funda_physics/chap6/</link>
      <pubDate>Wed, 17 Feb 2021 02:04:10 +0900</pubDate>
      
      <guid>https://klee30810.github.io/sci/funda_physics/chap6/</guid>
      <description>1. 전기장  (1) 마찰 전기  마찰 전기 (정전기) : 물체를 마찰할 때 나타나는 전기 대전 : 물체가 전기를 띠게 되는 현상 전기력 : 전하들 사이에 작용하는 힘 전하량 보존 법칙 : 일반적으로 모든 물체나 물질들은 원자로 이루어져 있기 때문에 기본적으로 전하들을 그 속에 가지고 있다. 전하들의 이동이 이루어져 전기적 중성은 깨지고 전기적 성질을 띠게 될 수 있다. 이와 같이 두 물체를 마찰하는 과정에서 전하가 한 물체에서 다른 물체로 이동할 수는 있으나, 이동 과정에서 전하가 생겨나거나 없어지지 않으며 그 총량은 일정하게 보존된다.</description>
    </item>
    
    <item>
      <title>Chap6. Structural Analysis</title>
      <link>https://klee30810.github.io/mech/statics/chap6/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:56 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap6/</guid>
      <description>Objectives
 To show how to determine the forces in the members of a truss using the method of joints and the method od sections To analyze the forces acting on the members of frames and machines composed of pin-connected members  6.1 Simple Trusses  truss : a structure composed of slender members joined together at their end points  (1) Assumptions for Design =&amp;gt; Two-force member
a. All loadings are applied at the joints</description>
    </item>
    
    <item>
      <title>Chap6. 명확하고 간결한 주석 달기</title>
      <link>https://klee30810.github.io/compu/readable_code/chap6/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:48 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap6/</guid>
      <description>주석은 높은 &#39;정보 대 공간&#39; 비율을 맞춰야 한다.  __01. 주석을 간결하게 하라 1 2 3 4 5 6 7 8  // The int is the CategoryType. // The first float in the inner pair is the &amp;#39;score&amp;#39;, // the second is the &amp;#39;weight&amp;#39;. typedef hash_map&amp;lt;int, pair&amp;lt;float, float&amp;gt; &amp;gt; ScoreMap; /* CONCISE ONE!!! */ // CategoryType -&amp;gt; (score, weight) typedef hash_map&amp;lt;int, pair&amp;lt;float, float&amp;gt; &amp;gt; ScoreMap;     짧게 줄여도 정보를 충분히 전달할 수 있다면 주석을 짧게 줄여라.</description>
    </item>
    
    <item>
      <title>Chap7. Queue</title>
      <link>https://klee30810.github.io/compu/data_structure/chap7/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:13 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap7/</guid>
      <description>1. 큐의 의해와 ADT 정의  큐는 LIFO(Last-in, First-out) 구조의 자료구조이다. 때문에 먼저 들어간 것이 먼저 나오는, 일종의 줄서기에 비유할 수 있는 자료구조이다 큐에 데이터를 넣는 연산 enqueue &amp;amp; 큐에서 데이터를 꺼내는 연산 dequeue  ADT 정의 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  void QueueInit(Queue * pq); // 큐의 초기화 진행, 큐 생성 후 가장 먼저 호출되어야 함  int QIsEmpty(Queue * pq); // 큐가 빈 경우 TRUE(1)  void Enqueue(Queue * pq, Data data); // 큐에 data로 전달된 값을 저장  Data Dequeue(Queue * pq); // 저장 순서가 앞선 데이터를 반환하고 삭제한다.</description>
    </item>
    
    <item>
      <title>Chap7. Internal Forces</title>
      <link>https://klee30810.github.io/mech/statics/chap7/</link>
      <pubDate>Mon, 15 Feb 2021 22:02:59 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap7/</guid>
      <description>Objectives
 To show how to use the method of sections to determine the internal loadings in a member
 To generalize this procedure by formulating equations that can be plotted so that they describe the internal shear and moement throughout a member
 To analyze the forces and study the geometry of cables supporting a load
  7.1 Internal Forces Developed in Structural Members 
 normal force : $N_B$, acts perpendicular to the cross section shear force : $V_B$, acts tangential to the cross section bending moment : $M_B$ The force components prevent the relative translation between the two segments, and the couple moment prevents the relative rotation.</description>
    </item>
    
    <item>
      <title>Chap7. 읽기 쉽게 흐름제어 만들기</title>
      <link>https://klee30810.github.io/compu/readable_code/chap7/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:50 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap7/</guid>
      <description>제어문은 사실 코드를 읽기 어렵게 만든다.  ★ 흐름을 제어하는 조건과 루프 그리고 여타 요소를 최대한 &#39;자연스럽게&#39; 만들도록 노력하라.코드를 읽다가 다시 되돌아가서 코드를 읽지 않아도 되게끔 만들어야 한다.
__01. 조건문에서 인수의 순서  왼쪽에 &#39;질문을 받는&#39; 유동적인 값을 쓰고, 오른쪽에 비교대상으로 사용되는 고정적인 값을 써라.  __02. if/else 블록의 순서  조건은 부정문이 아닌 긍정문으로 쓰려고하라. 간단한 것을 먼저 처리하라. 이러면 한 화면으로 두개의 구문을 볼 수 있을 가능성이 높아진다.</description>
    </item>
    
    <item>
      <title>Chap8. Tree</title>
      <link>https://klee30810.github.io/compu/data_structure/chap8/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:17 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap8/</guid>
      <description>대부분의 비선형 자료구조는 표현을 목적으로 하며 Tree 구조 또한 그렇다.  1. 트리의 개요  (1) 이진트리  연결리스트 : 노드를 추가하지 않고 데이터를 삽입했다. 트리 : 구조체를 만들고 삽입, 삭제, 추출 등 구조체를 위한 도구가 될 함수를 만들 것이다. 방향보다는 서로간 연결이 더 중요하다. 각자 서로의 주소값을 알고 있으면 연결정보가 있는 것이다. 계층적 관계(Hierarchical Relationship) 을 표현하는 자료구조 데이터 표현을 위한 도구  노드 node: 트리의 구성요소, 실제 data를 담을 수 있는 구조 간선 edge: 노드 간 연결선 루트 노드 root node: 트리 최상위 노드 단말 노드 terminal code : 아래로 다른 노드가 연결되어 있지 않는 노드 내부 노드 internal node : 단말 노드를 제외한 모든 노드 노드간 관계 : 부모 노드, 자식 노드, 형제 노드  서브 트리 : 각 트리는 또다른 서브 트리로 이뤄져 있고 그 주고는 재귀적이다.</description>
    </item>
    
    <item>
      <title>Chap8. Friction</title>
      <link>https://klee30810.github.io/mech/statics/chap8/</link>
      <pubDate>Mon, 15 Feb 2021 22:03:01 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap8/</guid>
      <description>Objectives  To introduce the concept of dry friction and show how to analyze the equilbrium of rigid bodies subjected to this force To present specific applications of frictional force analysis on wedges, screws, belts, and bearings To investigate the concept of rolling resistance  8.1 Characteristics of Dry Friction  Friction : a force that resists the movement of two contacting surfaces that slide relative to one another
 always acts tangent to the surface at the points of contact and is directed so as to oppose the possible or existing motion between the surfaces</description>
    </item>
    
    <item>
      <title>Chap8. 거대한 표현을 잘게 쪼개기</title>
      <link>https://klee30810.github.io/compu/readable_code/chap8/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:53 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap8/</guid>
      <description>★ 거대한 표현을 더 소화하기 쉬운 여러 조각으로 나눈다.
__01. 설명 변수  거대한 표현을 쪼개는 가장 쉬운 방법은 작은 하위 표현을 담을 &#39;추가 변수(extra variable)&#39;을 만드는 것이다.  1 2 3 4 5 6 7  // Here is an example: if line.split(&amp;#39;:&amp;#39;)[0].strip() == &amp;#34;root&amp;#34;: ... //Here is the same code, now with an explaining variable: username = line.split(&amp;#39;:&amp;#39;)[0].strip() if username == &amp;#34;root&amp;#34;: ...     추가 변수는 하위 표현의 의미를 설명하므로 &#39;설명 변수(explaning variable)&#39;라고도 한다.</description>
    </item>
    
    <item>
      <title>Chap9. Priority Queue &amp; Heap</title>
      <link>https://klee30810.github.io/compu/data_structure/chap9/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:19 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap9/</guid>
      <description>1. 우선순위 큐의 이해   data의 우선순위 결정 → 들어가는 순서와 상관없이 우선순위 근거로 연산 진행 ⇒ 우선순위는 프로그래머가 직접 결정  구현 방법  배열 기반 구현 : 우선순위 기준을 배열에 추가 → data가 많아질 경우 배열이 길어지기 때문에 성능 악화
 연결리스트 기반 구현 : 원하는 값을 찾기 위해 포인터 이동 연산을 ㅁ많이 해야 함 → 성능 악화
 힙을 이용하는 방법
  힙  완전 이진트리의 일종 → 데이터를 넣고 빼기 쉬워서 성능 문제가 없다.</description>
    </item>
    
    <item>
      <title>Chap9. Center of Gravity &amp; Centroid</title>
      <link>https://klee30810.github.io/mech/statics/chap9/</link>
      <pubDate>Mon, 15 Feb 2021 22:03:03 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap9/</guid>
      <description>Objectives  To discuss the concept of center of gravity, center of mass, and the centroid To show how to determine the location of the center of gravity and centroid for a system of discrete particles and a body of arbitray shape. To use the theorems of Pappus and Guldinus for finding the surface area and volume for a body having axial symmetry. To present a method for finding the resultant of a general distributed loading and show how it applies to finding the resultant force of a pressure loading caused by a fluid  9.</description>
    </item>
    
    <item>
      <title>Chap9. 변수와 가독성</title>
      <link>https://klee30810.github.io/compu/readable_code/chap9/</link>
      <pubDate>Mon, 15 Feb 2021 07:54:56 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap9/</guid>
      <description>변수를 잘못 사용하면 다음과 같은 문제가 있다.   변수의 수가 많을수록 기억하고 다루기 더 어려워진다.
 변수의 범위가 넓어질수록 기억하고 다루는 시간이 더 길어진다.
 변수값이 자주 바뀔수록 현재값을 기억하고 다루기가 더 어려워진다.
  __01. 변수 제거하기  가독성에 도움되지 않는 변수는 제거하는 것이 좋다.
 It isn’t breaking down a complex expression. It doesn’t add clarification—the expression datetime.datetime.now() is clear enough. It’s used only once, so it doesn’t compress any redundant code.</description>
    </item>
    
    <item>
      <title>Chap10. Sort</title>
      <link>https://klee30810.github.io/compu/data_structure/chap10/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:22 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap10/</guid>
      <description>3대 연산 : 삽입, 삭제, 탐색 정렬은 탐색을 이야기 하기 위함 ⇒ 탐색 전에 정렬이 필요!  10.1 단순한 정렬 알고리즘  버블 정렬 (Bubble Sort) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  void BubbleSort(int arr[], int n) { int i, j; int temp; for(i=0; i&amp;lt;n-1; i++) { for(j=0; j&amp;lt;(n-i)-1; j++) { if(arr[j] &amp;gt; arr[j+1]) { // 데이터의 교환  temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } } }  1 2 3 4 5 6 7 8 9 10 11 12 13  int main() { int arr[4] = {3,2,4,1}; int i; BubbleSort(arr, sizeof(arr)/sizeof(int)); for(i=0; i&amp;lt;4; i++) printf(&amp;#34;%d &amp;#34;, arr[i]); printf(&amp;#34;\n&amp;#34;); return 0; }    성능평가  비교 횟수 : 두 데이터간의 비교 연산 횟수 이동 횟수 : 위치의 변경을 위한 데이터 이동 횟수   \[(n-1)+.</description>
    </item>
    
    <item>
      <title>Chap10. Moment of Inertia</title>
      <link>https://klee30810.github.io/mech/statics/chap10/</link>
      <pubDate>Mon, 15 Feb 2021 22:03:07 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap10/</guid>
      <description>Objectives  To develop a method ofr determining the moment of inertia for an area. To introduce the product of inertia and show how to determine the maximum and minimum moments of inertia for an area To discuss the mass moment of inertia  10.1 Definition of Moments of Inertia for Areas  Whenever a distributed loading acts perpendicular to an area and its intensity varies linearly, the computation of the moment of the loading distribution about an axis will involve a quantity called teh moment of inertia of the area.</description>
    </item>
    
    <item>
      <title>Chap10. 상관없는 하위문제 추출</title>
      <link>https://klee30810.github.io/compu/readable_code/chap10/</link>
      <pubDate>Mon, 15 Feb 2021 07:55:00 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap10/</guid>
      <description>큰 흐름과 관계가 적은 하위 문제를 적극적으로 발견해서 추출하라.   주어진 함수나 코드 블록을 보고, 스스로에게 질문하라. &amp;quot;상위 수준에서 본 이 코드의 목적은 무엇인가?&amp;quot;
 코드의 모든 줄에 질문을 던져라. &amp;quot;이 코드는 직접적으로 코드가 해결하기 위한 목적을 위해서 존재하는가?
  혹은 그 목적을 위해서 필요하긴 하지만 그 자체와 직접적으로 상관없는 하위 문제를 해결하는가?&amp;quot;
만약 본래 목적과 직접적으로 관련되지 않은 하위 문제를 해결하는 코드의 분량이 상당히 많으면, 이를 추출해서 별도의 함수로 만들어라.</description>
    </item>
    
    <item>
      <title>Chap11. Search-1</title>
      <link>https://klee30810.github.io/compu/data_structure/chap11/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:23 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap11/</guid>
      <description>&amp;quot;탐색을 잘하기 위한 저장 방법은 무엇인가?&amp;quot; 탐색은 이전에 데이터 정렬이 필수적  1. 탐색의 이해와 보간 탐색   효율적인 탐색을 위한 저장방법, 효율적인 탐색이 가능한 대표적인 자료구조는 &amp;quot;이진트리&amp;quot;이다.  보간 탐색  이진 탐색 : 무조건 중간에 위치한 데이터를 탐색의 위치로 결정 보간 탐색 : 대상에 비례하여 탐색의 위치를 결정 → 단순 비례 가정 후 비슷한 위치 찾기 노력 비례식 구성 → 완전 비례 가정  s : 탐색 대상이 저장된 인덱스 값   \[ A:Q=(high-low):(s-low) \Rightarrow s=\frac{Q}{A}(high-low)+low \\ \Rightarrow s=\frac{x-arr[low]}{arr[high]-arr[low]}(high-low)+low\]</description>
    </item>
    
    <item>
      <title>Chap11. Virtual Work</title>
      <link>https://klee30810.github.io/mech/statics/chap11/</link>
      <pubDate>Mon, 15 Feb 2021 22:03:08 +0900</pubDate>
      
      <guid>https://klee30810.github.io/mech/statics/chap11/</guid>
      <description>Objectives  To introduce the principle of virtual work and show how it applies to finding the equilibrium configuration of a system of pin-connected members
 To establish the potential-energy function and use the potential-energy method to investigate the type of equilibirum ofr stablity of a rigid body or system of pin-connected members
  11.1 Definition of Work (1) Work of Force
 A force does work when it undergoes a displacement in the direction of its line of action  \[dU = F dr cos\theta = F \cdot dr\]</description>
    </item>
    
    <item>
      <title>Chap11. 한 번에 하나씩</title>
      <link>https://klee30810.github.io/compu/readable_code/chap11/</link>
      <pubDate>Mon, 15 Feb 2021 07:55:03 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap11/</guid>
      <description>한 번에 여러 가지 일을 수행하는 코드는 이해하기 어렵다.  ★ 한 번에 하나의 작업만 수행하게 코드를 구성해야 한다. (코드를 &#39;탈파편화(Defragmenting)&#39;하라.)
 하나의 함수는 오직 한 가지 작업만 하게 하는 것이 좋지만, 큰 함수를 독자적인 논리적 영역들로 재구성하는 것 만으로 가독성에 도움이 된다.
 코드가 한 번에 한가지 일만 수행하게 하는 절차는 다음과 같다.
   코드가 수행하는 모든 &#39;작업&#39;을 나열한다. 이때 작업은 아주 간단한 일일수도 있고, 아주 모호한 일일수도 있다.</description>
    </item>
    
    <item>
      <title>Chap12. Search-2</title>
      <link>https://klee30810.github.io/compu/data_structure/chap12/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:25 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap12/</guid>
      <description>12.1 균형 잡힌 이진 탐색 트리 : AVL 트리의 이해   트리 → 이진트리 → 이진탐색트리 → 균형잡힌 이진탐색트리 이진 탐색 트리의 연산은 원래 \(O(\log_2n)\)의 시간 복잡도를 가지지만 트리 균형이 맞지 않을수록 \(O(n)\)에 가까운 시간 복잡도를 보인다. ⇒ 약간의 순서 변화로 균형이 잡힌다. AVL 는 균형 인수(Balance Factor)를 기준으로 트리의 균형을 잡기 위한 리밸런싱시기를 결정한다.  균형 인수 = 왼쪽 서브 트리의 높이 - 오른쪽 서브 트리의 높이 균형 인수의 절댓값이 2 이상인 경우 리밸런싱 진행!</description>
    </item>
    
    <item>
      <title>2102_4</title>
      <link>https://klee30810.github.io/language/chinese/2102_4/</link>
      <pubDate>Sun, 21 Feb 2021 22:36:43 +0900</pubDate>
      
      <guid>https://klee30810.github.io/language/chinese/2102_4/</guid>
      <description>春节假期一线城市楼市成交量创近三年新高时间：  춘절기간 도시의 부동산 거래량이 3년내 최고를 기록했다.  #### 2021-02-20 来源：中国证券报 2021年春节假期楼市成交呈现明显的地域分化特征，三四线城市楼市成交遇冷。相比之下，一线城市新房售楼处“不打烊”、二手房带看正常，北京、广州、深圳春节期间成交创近三年新高。
 2021년 춘절기간 부동산시장의 거래성사는 지역별 특징을 나타냈다. 3，4선 성의 거래는 거의 없었다. 이에 반해 일선의 신규 물량은 활발했으며, 중고 시장은 정상이며, 북경, 광동, 선전의 춘절기간 거래 성사는 3년간 최고치를 기록했다.  区域分化明显
 지역간 분화의 뚜렷해짐  诸葛找房数据研究中心监测数据显示，2021年春节假期监测重点10城新房成交1416套，比去年春节上涨224.8%。今年一线城市春节假期新房成交情况转好。其中，深圳日均成交达到35套。
 ?? 데이터 연구 중심의 자료에 따르면, 2021년 춘절기간 10개의 성을 모니터링한 결과 1416건이 성사되었으며, 이는 작년 보다 224.</description>
    </item>
    
    <item>
      <title>Chap12. 생각을 코드로 만들기</title>
      <link>https://klee30810.github.io/compu/readable_code/chap12/</link>
      <pubDate>Mon, 15 Feb 2021 07:55:05 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap12/</guid>
      <description>복잡한 생각을 다른 사람에게 설명할 때 중요하지 않은 자세한 내용 때문에 듣는 사람을 혼동시키는 일이 종종 있다.
 &#39;쉬운 말&#39;로 자신의 생각을 지식이 부족한 사람에게 전달하는 기술은 매우 중요하다.
 여기에는 설명할 내용을 걸러서 요지만 뽑아내는 능력이 요구된다.
  - 코드도 마찬가지로 &#39;쉬운 말&#39;로 작성되어야 한다.
 이 장에서 설명할 코드를 더 명확하게 만드는 간단한 과정은 다음과 같다.   코드가 할 일을 다른 사람에게 설명하듯이 &#39;쉬운 말&#39;로 묘사하라.</description>
    </item>
    
    <item>
      <title>Chap13. Table &amp; Hash</title>
      <link>https://klee30810.github.io/compu/data_structure/chap13/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:27 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap13/</guid>
      <description>13.1 빠른 탐색을 보이는 해쉬 테이블  테이블 자료구조  데이터가 key와 value로 한 쌍을 이루며, key가 데이터의 저장 및 탐색의 도구가 된다. 테이블 자료구조에서는 원하는 데이터를 단번에 찾을 수 있다. key 역시 의미있는 데이터로 정의하는 것이 좋다.  데이터에 근거하여 생성되어야 하며 중복되면 안된다.  테이블 자료구조의 탐색 연산은 O(1)의 시간복잡도를 보인다. 사전구조 혹은 맵(map)이라고 불린다.  배열 기반 테이블 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  typedef struct _empInfo { int empNum;	// 고유번호 : key  int age;	// 나이 : value } Empinfo; int main() { EmpInfo empInfoArr[1000]; EmpInfo ei; int eNum; printf(&amp;#34;Enter empnum &amp;amp; age: &amp;#34;); scanf(&amp;#34;%d %d&amp;#34;, &amp;amp;(ei.</description>
    </item>
    
    <item>
      <title>Chap13. 코드 분량 줄이기</title>
      <link>https://klee30810.github.io/compu/readable_code/chap13/</link>
      <pubDate>Mon, 15 Feb 2021 07:55:09 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap13/</guid>
      <description>프로그래머가 배워야 하는 가장 중요한 기술은 언제 코딩을 해야 하는지 아는 것이다.  ★ 가장 읽기 쉬운 코드는 아무것도 없는 코드다.
__01. 그 기능을 구현하려고 애쓰지 마라 - 그럴 필요가 없다  프로그래머는 대개 프로젝트에 정말로 필요한 기능이 얼마나 있는지 과대평가하는 경향이 있다. 또한 어떤 기능을 구현하는 데 필요한 노력을 과소평가하는 경향도 있다. 이는 조잡한 프로토타입을 구현하는 시간을 지나치게 낙관적으로 에측하고, 그 코드를 장차 유지보수하고, 문서를 만들고, 코드 베이스에 새로운 &#39;무게&#39;를 더하는데 얼마나 많은 시간이 필요한지를 완전히 잊어버리게 한다.</description>
    </item>
    
    <item>
      <title>Chap14. Graph </title>
      <link>https://klee30810.github.io/compu/data_structure/chap14/</link>
      <pubDate>Sun, 07 Mar 2021 14:35:29 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/data_structure/chap14/</guid>
      <description>14.1 그래프 이해와 종류   무방향 완전 그래프 : 연락의 방향성이 없음 → 안전한 구조 (둘 다 연락 시 백업이 되므로) 방향 완전 그래프 : 위험성 존재 부분 그래프 : 일부 정점과 간선으로 구성이 된 그래프  그래프의 집합 표현  정점 집합 : {A, B, C, D} 간선 집합 : {(A,B), (A,D), (C,D)} → 무방향 / 방향 있을 경우 &amp;lt;&amp;gt;  그래프의 ADT  그래프 최종목적 : 특정 정보를 그대로 담을 수 있도록 표현  1 2 3 4 5 6 7 8 9 10 11 12 13  enum {A, B, C, D, E, F}	// 정점 이름 선언  void GraphInit(UALGraph * pg, int nv); // 그래프 초기화, 두번째 인자로 정점의 수 전달  void GraphDestory(UALGraph * pg); // 그래프 초기화 과정 중, 할당한 리소스 반환  void AddEdge(UALGraph * pg, int fromV, int toV); // fromV와 toV로 전달된 정점을 연결하는 간선을 그래프에 추가  void ShowGraphEdgeInfo(UALGraph * pg); // 그래프 간선정보 출력   그래프를 구현하는 두 가지 방법  인접 행렬 기반 : 배열 선언 후 간선 정보 기록</description>
    </item>
    
    <item>
      <title>Chap14. 테스트와 가독성</title>
      <link>https://klee30810.github.io/compu/readable_code/chap14/</link>
      <pubDate>Mon, 15 Feb 2021 07:55:12 +0900</pubDate>
      
      <guid>https://klee30810.github.io/compu/readable_code/chap14/</guid>
      <description>We’re going to focus on the readability aspect of tests and not get into whether you should write test code before writing real code (&amp;quot;test-driven development”) or other philosophical aspects of test development.  __01. 읽거나 유지보수하기 쉽게 테스트를 만들어라  Test code should be readable so that other coders are comfortable changing or adding tests.  __02. 이 테스트는 어떤 점이 잘못되었을까? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  // Sort &amp;#39;docs&amp;#39; by score (highest first) and remove negative-scored documents.</description>
    </item>
    
    <item>
      <title>Chap3 3</title>
      <link>https://klee30810.github.io/battery/principles_lithium/chap3-3/</link>
      <pubDate>Sat, 06 Mar 2021 15:44:59 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/principles_lithium/chap3-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Chap3 2</title>
      <link>https://klee30810.github.io/battery/principles_lithium/chap3-2/</link>
      <pubDate>Sat, 06 Mar 2021 15:44:53 +0900</pubDate>
      
      <guid>https://klee30810.github.io/battery/principles_lithium/chap3-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The Li-Ion Rechargeable Battery: A Perspective</title>
      <link>https://klee30810.github.io/paper_review/battery/goodenough2013/</link>
      <pubDate>Thu, 11 Feb 2021 05:35:32 +0900</pubDate>
      
      <guid>https://klee30810.github.io/paper_review/battery/goodenough2013/</guid>
      <description>The Li-Ion Rechargeable Battery: A Perspective  Author : Kyungmin Lee Thesis : Li-Ion Battery is hot trend of technology with its cathode, anode, electrolyte, and separation membrane. Citation : Goodenough, J. B., &amp;amp; Park, K. S. (2013). The Li-ion rechargeable battery: a perspective. Journal of the American Chemical Society, 135(4), 1167-1176.  Abstract   Each cell of a battery stores electrical energy as chemical energy in two electrodes, a reductant (anode) and an oxidant (cathode)  separated by an electrolyte that transfers the ionic component of the chemical reaction inside the cell and forces the electronic component outside the battery  The chemical reaction of a rechargeable battery must be reversible on the application of a charging I and V.</description>
    </item>
    
  </channel>
</rss>
